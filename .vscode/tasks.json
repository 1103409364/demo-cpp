{
  "tasks": [
    {
      "type": "cppbuild", //任务执行的是shell命令
      "label": "C/C++: clang++ 生成活动文件", //和launch.josn 中的 preLaunchTask 必须一样
      "command": "/usr/bin/clang++",
      "args": [
        "-std=c++17", //使用c++17标准编译
        "-I${workspaceFolder}/include",
        "-I${workspaceFolder}/dependencies/GLFW/include", // 库头
        "-L${workspaceFolder}/dependencies/GLFW/lib-arm64", // 库所在目录
        "-lglfw3", // 库名称
        "-framework", // 如果您使用的是 GLFW 的静态库版本，请将其和 Cocoa、OpenGL 和 IOKit 框架作为依赖项添加到项目中。它们都可以在 /System/Library/Frameworks 中找到。https://www.glfw.org/docs/latest/build.html
        "Cocoa",
        "-framework",
        "OpenGL",
        "-framework",
        "IOKit",
        "-fcolor-diagnostics",
        "-fansi-escape-codes",
        "-g", //生成和调试有关的信息
        "${workspaceFolder}/src/*.cpp", // 当前工作空间下文件夹 src 目录名下的所有cpp文件。 source对应工程目录下的source文件夹名字，可自行修改
        "-o", // -E 可以显示预处理后的结果
        "${workspaceFolder}/out/${fileBasenameNoExtension}" //指定输出的文件名为out，默认a.exe。out对应工程目录下的out文件夹名字，可自行修改
        // "-finput-charset=UTF-8" //输入编译器默认文本编码 默认为utf-8
      ],
      "options": {
        "cwd": "${fileDirname}" // fileDirname 文件所在目录 workspaceFolder 项目根目录
      },
      "problemMatcher": ["$gcc"],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "detail": "调试器生成的任务。"
    }
  ],
  "version": "2.0.0"
}
